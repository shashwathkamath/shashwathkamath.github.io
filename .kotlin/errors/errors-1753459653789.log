kotlin version: 2.0.0
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.base/java.util.Collections.singletonIterator(Collections.java:4807)
	at java.base/java.util.Collections$SingletonList.iterator(Collections.java:4950)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.MangleUtilsKt.collectForMangler(mangleUtils.kt:17)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.BaseKotlinMangleComputer.mangleSignature(BaseKotlinMangleComputer.kt:182)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.BaseKotlinMangleComputer.mangleFunction(BaseKotlinMangleComputer.kt:155)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer.access$mangleFunction(IrMangleComputer.kt:23)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer$Visitor.visitSimpleFunction(IrMangleComputer.kt:247)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitSimpleFunction(IrElementVisitorVoid.kt:140)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer$Visitor.visitSimpleFunction(IrMangleComputer.kt:135)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer$Visitor.visitSimpleFunction(IrMangleComputer.kt:135)
	at org.jetbrains.kotlin.ir.declarations.IrSimpleFunction.accept(IrSimpleFunction.kt:36)
	at org.jetbrains.kotlin.ir.visitors.IrVisitorsKt.acceptVoid(IrVisitors.kt:11)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer.visit(IrMangleComputer.kt:50)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrMangleComputer.visit(IrMangleComputer.kt:23)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.BaseKotlinMangleComputer.computeMangle(BaseKotlinMangleComputer.kt:97)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrBasedKotlinManglerImpl.signatureString(IrBasedKotlinManglerImpl.kt:18)
	at org.jetbrains.kotlin.backend.common.serialization.mangle.ir.IrBasedKotlinManglerImpl.signatureString(IrBasedKotlinManglerImpl.kt:14)
	at org.jetbrains.kotlin.backend.common.serialization.signature.IdSignatureBuilder.setHashIdAndDescriptionFor(IdSignatureBuilder.kt:70)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer$PublicIdSigBuilder.visitSimpleFunction(IdSignatureFactory.kt:118)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitSimpleFunction(IrElementVisitorVoid.kt:140)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer$PublicIdSigBuilder.visitSimpleFunction(IdSignatureFactory.kt:59)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer$PublicIdSigBuilder.visitSimpleFunction(IdSignatureFactory.kt:59)
	at org.jetbrains.kotlin.ir.declarations.IrSimpleFunction.accept(IrSimpleFunction.kt:36)
	at org.jetbrains.kotlin.ir.visitors.IrVisitorsKt.acceptVoid(IrVisitors.kt:11)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer$PublicIdSigBuilder.accept(IdSignatureFactory.kt:69)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer$PublicIdSigBuilder.accept(IdSignatureFactory.kt:59)
	at org.jetbrains.kotlin.backend.common.serialization.signature.IdSignatureBuilder.buildSignature(IdSignatureBuilder.kt:183)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer.composePublicIdSignature(IdSignatureFactory.kt:32)
	at org.jetbrains.kotlin.backend.common.serialization.signature.IdSignatureFactory.composeSignatureForDeclaration(IdSignatureFactory.kt:203)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideBuilderStrategy.composeSignature(FakeOverrides.kt:142)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideBuilderStrategy.computeFunctionFakeOverrideSymbol(FakeOverrides.kt:150)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideBuilderStrategy.linkFunctionFakeOverride(FakeOverrides.kt:94)


